Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/Horario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport es.udc.psi.agendaly.BaseActivity;\r\nimport es.udc.psi.agendaly.R;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaView;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\n\r\npublic class Horario extends BaseActivity {\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_horario);\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n\r\n        CalendarFragment fragmentCalendar = new CalendarFragment();\r\n        InfoFragment infoFragment = new InfoFragment(\"\");\r\n\r\n        fragmentTransaction.replace(R.id.punto_anclaje, fragmentCalendar);\r\n        fragmentTransaction.replace(R.id.punto_anclaje_abajo, infoFragment);\r\n        fragmentTransaction.commit();\r\n\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/Horario.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/Horario.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/Horario.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/Horario.java	(date 1639264374699)
@@ -1,16 +1,23 @@
 package es.udc.psi.agendaly.TimeTable;
 
+import android.content.Intent;
 import android.os.Bundle;
+import android.view.MenuItem;
 
+import androidx.annotation.NonNull;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.google.android.material.bottomappbar.BottomAppBar;
+import com.google.android.material.bottomnavigation.BottomNavigationView;
+
 import java.util.List;
 
 import butterknife.BindView;
 import es.udc.psi.agendaly.BaseActivity;
+import es.udc.psi.agendaly.Calendar.CalendarActivity;
 import es.udc.psi.agendaly.R;
 import es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;
 import es.udc.psi.agendaly.TimeTable.presenter.AsignaturaView;
@@ -18,7 +25,8 @@
 
 public class Horario extends BaseActivity {
 
-
+    @BindView(R.id.bottomnav)
+    BottomNavigationView  bm;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -33,8 +41,33 @@
         fragmentTransaction.replace(R.id.punto_anclaje_abajo, infoFragment);
         fragmentTransaction.commit();
 
-    }
+        bm.setSelectedItemId(R.id.inicioAppBar);
+
+        bm.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
+            @Override
+            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+                switch (item.getItemId()){
+                    case R.id.inicioAppBar:
+                        //Intent intentInicio = new Intent(getBaseContext(), Horario.class);
+                        //startActivity(intentInicio);
+                        break;
+                    case R.id.calendarAppBar:
+                        Intent intentCalendar = new Intent(getBaseContext(), CalendarActivity.class);
+                        startActivity(intentCalendar);
+                        break;
+                    case R.id.infoAppBar:
+
+                        break;
+                }
+                return true;
+            }
+        });
 
+    }
 
+    @Override
+    public void onBackPressed() {
+    	finishAffinity();
+    }
 
 }
\ No newline at end of file
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/InfoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.List;\r\n\r\nimport es.udc.psi.agendaly.R;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaDatabaseImp;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaView;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\n\r\npublic class InfoFragment extends Fragment implements AsignaturaView {\r\n    AsignaturaView mView;\r\n    private AsignaturaPresenter mPresenter;\r\n    RecyclerView recyclerView;\r\n    View rootView;\r\n    EventAdapter mAdapter;\r\n    String day;\r\n    InfoFragment(String day){\r\n        this.day=day;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        rootView= inflater.inflate(R.layout.activity_info_fragment, container, false);\r\n        recyclerView= rootView.findViewById(R.id.events_recyclerView);\r\n        mPresenter = new AsignaturaDatabaseImp(this, rootView.getContext());\r\n        setUpView();\r\n        searchbyName(day);\r\n        return rootView;\r\n    }\r\n\r\n    public void searchbyName(String day){\r\n        mPresenter.initFlow(day);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void showAsignaturas(List<AsignaturaViewModel> artists) {\r\n        mAdapter.setItems(artists);\r\n        recyclerView.setAdapter(mAdapter);\r\n    }\r\n\r\n    @Override\r\n    public void showEmptyView() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void showError() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void updateAsignatura(AsignaturaViewModel artist, int position) {\r\n\r\n    }\r\n\r\n    private void setUpView() {\r\n\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\r\n        recyclerView.setLayoutManager(linearLayoutManager);\r\n\r\n        mAdapter = new EventAdapter();\r\n        recyclerView.setAdapter(mAdapter);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/InfoFragment.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/InfoFragment.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/InfoFragment.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/InfoFragment.java	(date 1639264374784)
@@ -8,9 +8,11 @@
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
+import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
 import java.util.List;
 
+import butterknife.BindView;
 import es.udc.psi.agendaly.R;
 import es.udc.psi.agendaly.TimeTable.presenter.AsignaturaDatabaseImp;
 import es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;
@@ -18,7 +20,6 @@
 import es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;
 
 public class InfoFragment extends Fragment implements AsignaturaView {
-    AsignaturaView mView;
     private AsignaturaPresenter mPresenter;
     RecyclerView recyclerView;
     View rootView;
@@ -28,25 +29,40 @@
         this.day=day;
     }
 
+
+    SwipeRefreshLayout swipeRefreshLayout;
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         rootView= inflater.inflate(R.layout.activity_info_fragment, container, false);
         recyclerView= rootView.findViewById(R.id.events_recyclerView);
+        swipeRefreshLayout=rootView.findViewById(R.id.swipeLayout);
         mPresenter = new AsignaturaDatabaseImp(this, rootView.getContext());
+        searchByDay(day);
         setUpView();
-        searchbyName(day);
+        refesh();
         return rootView;
     }
 
-    public void searchbyName(String day){
-        mPresenter.initFlow(day);
+    public void refesh(){
+        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
+            @Override
+            public void onRefresh() {
+                searchByDay(day);
+                swipeRefreshLayout.setRefreshing(false);
+            }
+        });
+    }
+
+    public void searchByDay(String day){
+        mPresenter.searchByDay(day);
     }
 
 
     @Override
-    public void showAsignaturas(List<AsignaturaViewModel> artists) {
-        mAdapter.setItems(artists);
+    public void showAsignaturas(List<AsignaturaViewModel> asignaturas) {
+        mAdapter.setItems(asignaturas);
         recyclerView.setAdapter(mAdapter);
     }
 
@@ -61,7 +77,7 @@
     }
 
     @Override
-    public void updateAsignatura(AsignaturaViewModel artist, int position) {
+    public void updateAsignatura(AsignaturaViewModel asignatura, int position) {
 
     }
 
Index: app/src/main/res/layout/activity_horario.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".TimeTable.Horario\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/punto_anclaje\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"24dp\"\r\n        android:layout_weight=\"1\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/punto_anclaje_abajo\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"5\" />\r\n\r\n\r\n  </LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_horario.xml b/app/src/main/res/layout/activity_horario.xml
--- a/app/src/main/res/layout/activity_horario.xml	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/res/layout/activity_horario.xml	(date 1639264374752)
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
+
 <LinearLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
@@ -8,17 +9,35 @@
     tools:context=".TimeTable.Horario"
     android:orientation="vertical">
 
+
     <FrameLayout
         android:id="@+id/punto_anclaje"
         android:layout_width="match_parent"
         android:layout_height="24dp"
         android:layout_weight="1" />
 
+
     <FrameLayout
         android:id="@+id/punto_anclaje_abajo"
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:layout_weight="5" />
 
+    <com.google.android.material.bottomnavigation.BottomNavigationView
+        android:id="@+id/bottomnav"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="8dp"
+        android:layout_marginRight="8dp"
+        android:layout_marginBottom="56dp"
+        android:background="@drawable/nav_background_curved"
+        android:elevation="8dp"
+        app:menu="@menu/bottom_app_bar"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        />
+
+
 
   </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/menu/add_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n    <item\r\n        android:id=\"@+id/icon_add\"\r\n        android:icon=\"@drawable/baseline_add_24\"\r\n        android:title=\"@string/add_asignatura\"\r\n        app:showAsAction=\"always\" />\r\n\r\n    <item\r\n        android:id=\"@+id/icon_delete\"\r\n        android:icon=\"@drawable/baseline_delete_24\"\r\n        android:title=\"@string/delete_question\"\r\n        app:showAsAction=\"always\" />\r\n\r\n\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/add_menu.xml b/app/src/main/res/menu/add_menu.xml
--- a/app/src/main/res/menu/add_menu.xml	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/res/menu/add_menu.xml	(date 1639264374756)
@@ -3,15 +3,18 @@
     xmlns:app="http://schemas.android.com/apk/res-auto">
     <item
         android:id="@+id/icon_add"
-        android:icon="@drawable/baseline_add_24"
+        android:icon="@drawable/baseline_add_white_24"
         android:title="@string/add_asignatura"
         app:showAsAction="always" />
 
     <item
         android:id="@+id/icon_delete"
-        android:icon="@drawable/baseline_delete_24"
+        android:icon="@drawable/baseline_delete_white_24"
         android:title="@string/delete_question"
         app:showAsAction="always" />
-
-
+    <item
+        android:id="@+id/icon_sign_out"
+        android:icon="@drawable/account_circle"
+        android:title="@string/sign_out"
+        app:showAsAction="always" />
 </menu>
\ No newline at end of file
Index: app/src/main/res/layout/activity_item_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<TableLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:stretchColumns=\"*\">\r\n\r\n\r\n\r\n    <TableRow\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/textViewNombre\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:textAlignment=\"center\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textViewHorario\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:textAlignment=\"center\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textViewClase\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:textAlignment=\"center\" />\r\n\r\n    </TableRow>\r\n\r\n</TableLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_item_detail.xml b/app/src/main/res/layout/activity_item_detail.xml
--- a/app/src/main/res/layout/activity_item_detail.xml	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/res/layout/activity_item_detail.xml	(date 1639264374754)
@@ -2,33 +2,31 @@
 <TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:stretchColumns="*">
-
-
+    >
 
     <TableRow
-        android:layout_width="wrap_content"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_margin="5dp">
+       >
 
         <TextView
             android:id="@+id/textViewNombre"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
             android:layout_weight="1"
             android:textAlignment="center" />
 
         <TextView
             android:id="@+id/textViewHorario"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
             android:layout_weight="1"
             android:textAlignment="center" />
 
         <TextView
             android:id="@+id/textViewClase"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
             android:layout_weight="1"
             android:textAlignment="center" />
 
Index: app/src/main/res/layout/activity_info_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".TimeTable.InfoFragment\">\r\n\r\n    <TableRow\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tNombre\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"@string/asignatura\"\r\n            android:textAlignment=\"center\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tHorario\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"@string/hora\"\r\n            android:textAlignment=\"center\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tClase\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"@string/aula\"\r\n            android:textAlignment=\"center\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </TableRow>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/events_recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n    </androidx.recyclerview.widget.RecyclerView>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_info_fragment.xml b/app/src/main/res/layout/activity_info_fragment.xml
--- a/app/src/main/res/layout/activity_info_fragment.xml	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/res/layout/activity_info_fragment.xml	(date 1639264374753)
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
+
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
@@ -7,47 +8,72 @@
     android:orientation="vertical"
     tools:context=".TimeTable.InfoFragment">
 
-    <TableRow
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
+
+
+    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/swipeLayout">
+
+        <TableLayout
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+
+            android:stretchColumns="*"
+            >
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:background="@drawable/back"
+                >
 
-        <TextView
-            android:id="@+id/tNombre"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_weight="1"
-            android:padding="5dp"
-            android:text="@string/asignatura"
-            android:textAlignment="center"
-            android:textStyle="bold" />
+                <TextView
+                    android:id="@+id/tNombre"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:padding="5dp"
+                    android:text="@string/asignatura"
+                    android:textAlignment="center"
+                    android:background="@drawable/back"
+                    android:textColor="#000000"
+                    android:textStyle="bold" />
 
-        <TextView
-            android:id="@+id/tHorario"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_weight="1"
-            android:padding="5dp"
-            android:text="@string/hora"
-            android:textAlignment="center"
-            android:textStyle="bold" />
+                <TextView
+                    android:id="@+id/tHorario"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:padding="5dp"
+                    android:background="@drawable/back"
+                    android:text="@string/hora"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:textStyle="bold" />
 
-        <TextView
-            android:id="@+id/tClase"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_weight="1"
-            android:padding="5dp"
-            android:text="@string/aula"
-            android:textAlignment="center"
-            android:textStyle="bold" />
-
-    </TableRow>
+                <TextView
+                    android:id="@+id/tClase"
+                    android:layout_width="0dp"
+                    android:layout_height="match_parent"
+                    android:padding="5dp"
+                    android:background="@drawable/back"
+                    android:text="@string/aula"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:textStyle="bold" />
+            </TableRow>
+            <TableRow
+                android:padding="5dp">
+
+            </TableRow>
 
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/events_recyclerView"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-    </androidx.recyclerview.widget.RecyclerView>
+         <androidx.recyclerview.widget.RecyclerView
+             android:id="@+id/events_recyclerView"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent"
+             />
+
+        </TableLayout>
+    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
 
 
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/java/es/udc/psi/agendaly/Auth/AuthTestActivity.java
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/Auth/AuthTestActivity.java b/app/src/main/java/es/udc/psi/agendaly/Auth/AuthTestActivity.java
deleted file mode 100644
--- a/app/src/main/java/es/udc/psi/agendaly/Auth/AuthTestActivity.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ /dev/null	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
@@ -1,76 +0,0 @@
-/*
- * Agendaly, 2021
- * Authors:
- *  Laura Cabezas González
- *  Blanca María Fernández Martín
- *  Miguel Blanco Godón
- */
-package es.udc.psi.agendaly.Auth;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Build;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-
-import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
-import androidx.appcompat.app.AppCompatActivity;
-
-import com.google.firebase.auth.FirebaseAuth;
-
-import es.udc.psi.agendaly.R;
-
-public class AuthTestActivity extends AppCompatActivity {
-	private boolean activeSession = false;
-	private TextView userTv, authMethodTv;
-	private Button signOut;
-	@RequiresApi(api = Build.VERSION_CODES.O)
-	@Override
-	protected void onCreate(@Nullable Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.authtest_activity);
-		setTitle("Inicio");
-		Bundle bundle = getIntent().getExtras();
-		if (bundle != null) {
-			userTv = findViewById(R.id.user_tv);
-			userTv.setText(bundle.getString("user"));
-			authMethodTv = findViewById(R.id.method_tv);
-			authMethodTv.setText(bundle.getString("authMethod"));
-			signOut = findViewById(R.id.test_so_button);
-			// saving sign in data for automatic sign in
-			SharedPreferences.Editor sp = getApplicationContext().getSharedPreferences(getString(R.string.shared_preferences_file), Context.MODE_PRIVATE).edit();
-			if (bundle.getString("authMethod").equals(AuthenticationActivity.AUTH_TYPE_AGENDALY_ACCOUNT)) {
-				sp.putString("user", bundle.getString("user"));
-				sp.putString("passwd",Utils.encode(bundle.getString("password")));
-			}
-			sp.putString("authMethod", bundle.getString("authMethod"));
-			boolean committed = sp.commit();
-			activeSession = true;
-			if (!committed) {
-				Log.d("_TAG", "cannot save preferences");
-			}
-			signOut.setOnClickListener(new View.OnClickListener() {
-				@Override
-				public void onClick(View view) {
-					FirebaseAuth.getInstance().signOut();
-					SharedPreferences internalSP = getSharedPreferences(getString(R.string.shared_preferences_file), Context.MODE_PRIVATE);
-					internalSP.edit().clear().apply();
-					activeSession = false;
-					onBackPressed();
-				}
-			});
-		}
-	}
-	@Override
-	public void onBackPressed() {
-		if (activeSession) {
-			finishAffinity();
-		} else {
-			super.onBackPressed();
-		}
-	}
-}
Index: app/src/main/res/drawable/baseline_event_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_event_20.xml b/app/src/main/res/drawable/baseline_event_20.xml
new file mode 100644
--- /dev/null	(date 1639264374748)
+++ b/app/src/main/res/drawable/baseline_event_20.xml	(date 1639264374748)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="20dp"
+    android:height="20dp"
+    android:viewportWidth="20"
+    android:viewportHeight="20"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M14,10h-4v4h4v-4zM13,1v2L7,3L7,1L5,1v2L4,3c-1.1,0 -2,0.9 -2,2v11c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2L18,5c0,-1.1 -0.9,-2 -2,-2h-1L15,1h-2zM16,16L4,16L4,7h12v9z"/>
+</vector>
Index: app/src/main/res/drawable/baseline_home_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_home_24.xml b/app/src/main/res/drawable/baseline_home_24.xml
new file mode 100644
--- /dev/null	(date 1639264374750)
+++ b/app/src/main/res/drawable/baseline_home_24.xml	(date 1639264374750)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z"/>
+</vector>
Index: app/src/main/res/drawable/baseline_home_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_home_20.xml b/app/src/main/res/drawable/baseline_home_20.xml
new file mode 100644
--- /dev/null	(date 1639264374749)
+++ b/app/src/main/res/drawable/baseline_home_20.xml	(date 1639264374749)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="20dp"
+    android:height="20dp"
+    android:viewportWidth="20"
+    android:viewportHeight="20"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M8,17v-5h4v5h4v-6h2l-8,-8 -8,8h2v6h4z"/>
+</vector>
Index: app/src/main/res/drawable/baseline_event_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_event_24.xml b/app/src/main/res/drawable/baseline_event_24.xml
new file mode 100644
--- /dev/null	(date 1639264374749)
+++ b/app/src/main/res/drawable/baseline_event_24.xml	(date 1639264374749)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M17,12h-5v5h5v-5zM16,1v2L8,3L8,1L6,1v2L5,3c-1.11,0 -1.99,0.9 -1.99,2L3,19c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2L21,5c0,-1.1 -0.9,-2 -2,-2h-1L18,1h-2zM19,19L5,19L5,8h14v11z"/>
+</vector>
Index: app/src/main/res/layout/profile_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/profile_activity.xml b/app/src/main/res/layout/profile_activity.xml
new file mode 100644
--- /dev/null	(date 1639264374755)
+++ b/app/src/main/res/layout/profile_activity.xml	(date 1639264374755)
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="405dp">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="350dp"
+            android:orientation="vertical">
+            <ImageView
+                android:layout_marginTop="45dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_width="150dp"
+                android:layout_height="150dp"
+                android:src="@drawable/account_circle"/>
+            <TextView
+                android:id="@+id/user_mail"
+                android:layout_marginTop="10dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="User"
+                android:textColor="@color/black"
+                android:textStyle="bold"
+                android:textSize="21sp"/>
+        </LinearLayout>
+        <androidx.cardview.widget.CardView
+            android:layout_width="400dp"
+            android:layout_height="120dp"
+            android:layout_centerHorizontal="true"
+            android:layout_marginTop="275dp">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="horizontal"
+                android:weightSum="2">
+                <LinearLayout
+                    android:gravity="center"
+                    android:orientation="vertical"
+                    android:layout_width="0dp"
+                    android:layout_weight="1"
+                    android:layout_height="match_parent">
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Contacts"
+                        android:textSize="20sp"
+                        />
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="100"
+                        android:textStyle="bold"
+                        android:textSize="20sp"
+                        android:paddingTop="10dp"
+                        android:textColor="@color/black"/>
+
+                </LinearLayout>
+                <LinearLayout
+                    android:gravity="center"
+                    android:orientation="vertical"
+                    android:layout_width="0dp"
+                    android:layout_weight="1"
+                    android:layout_height="match_parent">
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Teams"
+                        android:textSize="20sp"
+                        />
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="5"
+                        android:textStyle="bold"
+                        android:textSize="20sp"
+                        android:paddingTop="10dp"
+                        android:textColor="@color/black"/>
+
+                </LinearLayout>
+            </LinearLayout>
+
+        </androidx.cardview.widget.CardView>
+    </RelativeLayout>
+
+    <Button
+        android:id="@+id/profile_sign_out_button"
+        android:layout_marginTop="35dp"
+        android:layout_gravity="center_horizontal"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/sign_out_button_text"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable.presenter;\r\n\r\nimport es.udc.psi.agendaly.TimeTable.Asignatura;\r\n\r\npublic interface AsignaturaPresenter {\r\n\r\n    void initFlow(String searchArtist);\r\n\r\n    void insert(Asignatura asignatura);\r\n\r\n    void clearAll();\r\n\r\n    void deleteClass(String asignatura);\r\n\r\n    void getAll();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaPresenter.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaPresenter.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaPresenter.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaPresenter.java	(date 1639264374702)
@@ -4,7 +4,7 @@
 
 public interface AsignaturaPresenter {
 
-    void initFlow(String searchArtist);
+    void searchByDay(String day);
 
     void insert(Asignatura asignatura);
 
Index: app/src/main/res/drawable/baseline_info_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_info_20.xml b/app/src/main/res/drawable/baseline_info_20.xml
new file mode 100644
--- /dev/null	(date 1639264374750)
+++ b/app/src/main/res/drawable/baseline_info_20.xml	(date 1639264374750)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="20dp"
+    android:height="20dp"
+    android:viewportWidth="20"
+    android:viewportHeight="20"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M10,1c-4.97,0 -9,4.03 -9,9s4.03,9 9,9 9,-4.03 9,-9 -4.03,-9 -9,-9zM11,15L9,15L9,9h2v6zM11,7L9,7L9,5h2v2z"/>
+</vector>
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable.presenter;\r\n\r\nimport java.util.List;\r\n\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\n\r\npublic interface AsignaturaView {\r\n\r\n    void showAsignaturas(List<AsignaturaViewModel> artists);\r\n\r\n    void showEmptyView();\r\n\r\n    void showError();\r\n\r\n    void updateAsignatura(AsignaturaViewModel artist, int position);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaView.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaView.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaView.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaView.java	(date 1639264374704)
@@ -6,11 +6,11 @@
 
 public interface AsignaturaView {
 
-    void showAsignaturas(List<AsignaturaViewModel> artists);
+    void showAsignaturas(List<AsignaturaViewModel> asignaturas);
 
     void showEmptyView();
 
     void showError();
 
-    void updateAsignatura(AsignaturaViewModel artist, int position);
+    void updateAsignatura(AsignaturaViewModel asignatura, int position);
 }
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/database/AsignaturaDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable.database;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.OnConflictStrategy;\r\nimport androidx.room.Query;\r\n\r\nimport java.util.List;\r\n\r\nimport es.udc.psi.agendaly.TimeTable.Asignatura;\r\n\r\n@Dao\r\npublic interface AsignaturaDao {\r\n    // Escritura\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    void insert(Asignatura... asignaturas);\r\n\r\n    @Query(\"DELETE FROM asignaturas WHERE nombre LIKE :asignatura\")\r\n    void delete(String asignatura);\r\n\r\n     @Query(\"SELECT * FROM asignaturas WHERE day LIKE :search\" )\r\n     public List<Asignatura> getDayAsignaturas(String search);\r\n\r\n    @Query(\"SELECT * FROM asignaturas\" )\r\n    public List<Asignatura> getAll();\r\n\r\n     @Query(\"DELETE FROM asignaturas\")\r\n    void deleteAll();\r\n\r\n   /*\r\n    // Consultas\r\n    @Query(\"SELECT * FROM artists\" )\r\n    public List<Artist> getAllArtists();\r\n\r\n    @Query(\"SELECT DISTINCT * FROM artists WHERE name LIKE :name\" )\r\n    public List<Artist> getArtist(String name);*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/database/AsignaturaDao.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/database/AsignaturaDao.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/database/AsignaturaDao.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/database/AsignaturaDao.java	(date 1639264374700)
@@ -28,11 +28,4 @@
      @Query("DELETE FROM asignaturas")
     void deleteAll();
 
-   /*
-    // Consultas
-    @Query("SELECT * FROM artists" )
-    public List<Artist> getAllArtists();
-
-    @Query("SELECT DISTINCT * FROM artists WHERE name LIKE :name" )
-    public List<Artist> getArtist(String name);*/
 }
Index: app/src/main/res/drawable/back.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/back.xml b/app/src/main/res/drawable/back.xml
new file mode 100644
--- /dev/null	(date 1639264374747)
+++ b/app/src/main/res/drawable/back.xml	(date 1639264374747)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
+    <solid android:color="@android:color/white" />
+    <stroke android:width="2dip" android:color="#7E7E7E"/>
+    <corners android:radius="2dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/nav_background_curved.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/nav_background_curved.xml b/app/src/main/res/drawable/nav_background_curved.xml
new file mode 100644
--- /dev/null	(date 1639264374752)
+++ b/app/src/main/res/drawable/nav_background_curved.xml	(date 1639264374752)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+    <solid android:color="@color/design_default_color_background" />
+    <corners android:radius="10dp" />
+</shape>
\ No newline at end of file
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaDatabaseImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable.presenter;\r\n\r\nimport android.content.Context;\r\nimport android.os.AsyncTask;\r\nimport android.util.Log;\r\n\r\nimport java.util.List;\r\n\r\nimport es.udc.psi.agendaly.TimeTable.Asignatura;\r\nimport es.udc.psi.agendaly.TimeTable.database.AsignaturaDatabaseClient;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModelMapper;\r\n\r\npublic class AsignaturaDatabaseImp implements AsignaturaPresenter{\r\n\r\n    private Context mContext;\r\n    private AsignaturaView mView;\r\n\r\n    private List<AsignaturaViewModel> mAsignaturaViewModels;\r\n\r\n\r\n    public AsignaturaDatabaseImp(AsignaturaView mView,Context mContex){\r\n        this.mView=mView;\r\n        this.mContext =mContex;\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void initFlow(String dayWeek){\r\n        new GetAsignaturasbyDay(dayWeek).execute();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void insert(Asignatura asignatura) {\r\n        insertAsignaturaDB(asignatura);\r\n    }\r\n\r\n    @Override\r\n    public void clearAll() {\r\n        clearAll();\r\n    }\r\n\r\n    @Override\r\n    public void deleteClass(String asignatura) {\r\n        deleteAsignaturaDB(asignatura);\r\n    }\r\n\r\n    @Override\r\n    public void getAll() {\r\n        getAsignaturasBD();\r\n    }\r\n\r\n    public void insertAsignaturaDB(Asignatura asignatura) {\r\n        class InsertAsignatura extends AsyncTask<Void, Void, Void> { // clase interna\r\n            @Override\r\n            public Void doInBackground(Void... voids) {\r\n                if(asignatura != null) {\r\n                    AsignaturaDatabaseClient.getInstance(mContext)\r\n                            .getAsignaturaDatabase()\r\n                            .getAsignaturaDao()\r\n                            .insert(asignatura); // Sustituir por la función necesaria\r\n                }\r\n                return null;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute (Void aVoid) {\r\n                super.onPostExecute(aVoid);\r\n\r\n            }\r\n        }\r\n        InsertAsignatura gf = new InsertAsignatura(); // Crear una instancia y ejecutar\r\n        gf.execute();\r\n    }\r\n\r\n    public void deleteAsignaturaDB(String asignatura) {\r\n        class DeleteAsignatura extends AsyncTask<Void, Void, Void> { // clase interna\r\n            @Override\r\n            public Void doInBackground(Void... voids) {\r\n                if(asignatura != null) {\r\n                    AsignaturaDatabaseClient.getInstance(mContext)\r\n                            .getAsignaturaDatabase()\r\n                            .getAsignaturaDao()\r\n                            .delete(asignatura); // Sustituir por la función necesaria\r\n                }\r\n                return null;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute (Void aVoid) {\r\n                super.onPostExecute(aVoid);\r\n            }\r\n        }\r\n        DeleteAsignatura gf = new DeleteAsignatura(); // Crear una instancia y ejecutar\r\n        gf.execute();\r\n    }\r\n\r\n    public void deleteAllAsignaturasDB() {\r\n        class DeleteAllAsignatura extends AsyncTask<Void, Void, Void> { // clase interna\r\n            @Override\r\n            public Void doInBackground(Void... voids) {\r\n\r\n                    AsignaturaDatabaseClient.getInstance(mContext)\r\n                            .getAsignaturaDatabase()\r\n                            .getAsignaturaDao()\r\n                            .deleteAll(); // Sustituir por la función necesaria\r\n\r\n                return null;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute (Void aVoid) {\r\n                super.onPostExecute(aVoid);\r\n            }\r\n        }\r\n        DeleteAllAsignatura gf = new DeleteAllAsignatura(); // Crear una instancia y ejecutar\r\n        gf.execute();\r\n    }\r\n\r\n\r\n    private List<AsignaturaViewModel> getArtistsViewModel(List<Asignatura> asignaturas) {\r\n\r\n        mAsignaturaViewModels = new AsignaturaViewModelMapper(asignaturas).map();\r\n        return mAsignaturaViewModels;\r\n    }\r\n\r\n\r\n    public class GetAsignaturasbyDay extends AsyncTask<Void, Void, List<Asignatura>> { // clase interna\r\n            String day;\r\n\r\n            public GetAsignaturasbyDay(String day){\r\n                this.day = day;\r\n\r\n            }\r\n            @Override\r\n            public List<Asignatura> doInBackground(Void... voids) {\r\n                List<Asignatura> asignaturaList = AsignaturaDatabaseClient.getInstance(mContext)\r\n                        .getAsignaturaDatabase()\r\n                        .getAsignaturaDao()\r\n                        .getDayAsignaturas(day);// Sustituir por la función necesaria\r\n                return asignaturaList;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute (List<Asignatura> list) {\r\n                super.onPostExecute(list);\r\n                mAsignaturaViewModels=getArtistsViewModel(list);\r\n                mView.showAsignaturas(mAsignaturaViewModels);\r\n            }\r\n\r\n    }\r\n\r\n\r\n    private void getAsignaturasBD () {\r\n        class GetAsignaturas extends AsyncTask<Void, Void, List<Asignatura>> {\r\n            @Override\r\n            protected List<Asignatura> doInBackground(Void... voids) {\r\n                List<Asignatura> asignaturaList =\r\n                        AsignaturaDatabaseClient.getInstance(mContext)\r\n                                .getAsignaturaDatabase()\r\n                                .getAsignaturaDao()\r\n                                .getAll();\r\n                return asignaturaList;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(List<Asignatura> result) {\r\n                if(!result.isEmpty()){\r\n                mAsignaturaViewModels = getArtistsViewModel(result);\r\n                if(!mAsignaturaViewModels.isEmpty())\r\n                {mView.showAsignaturas(mAsignaturaViewModels);}\r\n                }\r\n\r\n            }\r\n        }\r\n        GetAsignaturas gf = new GetAsignaturas(); // Crear una instancia y ejecutar\r\n        gf.execute();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaDatabaseImp.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaDatabaseImp.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaDatabaseImp.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/presenter/AsignaturaDatabaseImp.java	(date 1639264374701)
@@ -2,8 +2,8 @@
 
 import android.content.Context;
 import android.os.AsyncTask;
-import android.util.Log;
 
+import java.util.ArrayList;
 import java.util.List;
 
 import es.udc.psi.agendaly.TimeTable.Asignatura;
@@ -27,7 +27,7 @@
 
 
     @Override
-    public void initFlow(String dayWeek){
+    public void searchByDay(String dayWeek){
         new GetAsignaturasbyDay(dayWeek).execute();
     }
 
@@ -47,6 +47,7 @@
         deleteAsignaturaDB(asignatura);
     }
 
+
     @Override
     public void getAll() {
         getAsignaturasBD();
@@ -120,7 +121,7 @@
     }
 
 
-    private List<AsignaturaViewModel> getArtistsViewModel(List<Asignatura> asignaturas) {
+    private List<AsignaturaViewModel> getAsignaturaViewModel(List<Asignatura> asignaturas) {
 
         mAsignaturaViewModels = new AsignaturaViewModelMapper(asignaturas).map();
         return mAsignaturaViewModels;
@@ -146,7 +147,7 @@
             @Override
             protected void onPostExecute (List<Asignatura> list) {
                 super.onPostExecute(list);
-                mAsignaturaViewModels=getArtistsViewModel(list);
+                mAsignaturaViewModels= getAsignaturaViewModel(list);
                 mView.showAsignaturas(mAsignaturaViewModels);
             }
 
@@ -154,7 +155,15 @@
 
 
     private void getAsignaturasBD () {
+
         class GetAsignaturas extends AsyncTask<Void, Void, List<Asignatura>> {
+
+            private int mPosition;
+            GetAsignaturas(int position) {
+
+                mPosition = position;
+            }
+
             @Override
             protected List<Asignatura> doInBackground(Void... voids) {
                 List<Asignatura> asignaturaList =
@@ -168,15 +177,15 @@
             @Override
             protected void onPostExecute(List<Asignatura> result) {
                 if(!result.isEmpty()){
-                mAsignaturaViewModels = getArtistsViewModel(result);
+                mAsignaturaViewModels = getAsignaturaViewModel(result);
                 if(!mAsignaturaViewModels.isEmpty())
                 {mView.showAsignaturas(mAsignaturaViewModels);}
                 }
 
             }
         }
-        GetAsignaturas gf = new GetAsignaturas(); // Crear una instancia y ejecutar
-        gf.execute();
+
     }
+
 
 }
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/AddEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable;\r\n\r\nimport android.app.TimePickerDialog;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport es.udc.psi.agendaly.BaseActivity;\r\nimport es.udc.psi.agendaly.R;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaDatabaseImp;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaView;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\n\r\npublic class AddEvent extends BaseActivity implements AsignaturaView {\r\n    Asignatura asignatura = new Asignatura();\r\n    private EventAdapter mAdapter;\r\n    AsignaturaPresenter mPresenter;\r\n\r\n    @BindView(R.id.butInicio)\r\n    Button butInicio;\r\n\r\n    @BindView(R.id.butFin)\r\n    Button butFin;\r\n\r\n    @BindView(R.id.butSave)\r\n    Button butSave;\r\n\r\n    @BindView(R.id.editTextAsignatura)\r\n    EditText editTextAsignatura;\r\n\r\n    @BindView(R.id.editTextAula)\r\n    EditText editTextAula;\r\n\r\n    @BindView(R.id.spinner)\r\n    Spinner spinner;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.formulario_clases);\r\n        setUI();\r\n        mPresenter = new AsignaturaDatabaseImp(this,getBaseContext());\r\n\r\n\r\n    }\r\n\r\n    public void setUI(){\r\n        addInicio();\r\n        addFin();\r\n        chooseDay();\r\n        nameAsignatura();\r\n        nameAula();\r\n        guardarAsignatura();\r\n        setSpinner();\r\n    }\r\n\r\n\r\n\r\n    public void guardarAsignatura(){\r\n        butSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                nameAsignatura();\r\n                nameAula();\r\n                if(asignatura !=null && asignatura.getFin() != null && asignatura.getFin() != null\r\n                        && asignatura.getAula() != null && asignatura.getNombre() != null) {\r\n                    mPresenter.insert(asignatura);\r\n                    Toast.makeText(getBaseContext(), getString(R.string.add_asignatura), Toast.LENGTH_SHORT).show();\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void clearAll(){\r\n        editTextAsignatura.setText(\"\");\r\n        editTextAula.setText(\"\");\r\n\r\n    }\r\n\r\n    public void nameAsignatura(){\r\n        String eT = editTextAsignatura.getText().toString();\r\n        if(!eT.isEmpty()) {asignatura.setNombre(eT);}\r\n    }\r\n\r\n    public void nameAula(){\r\n        String eT = editTextAula.getText().toString();\r\n        if(!eT.isEmpty()) {asignatura.setAula(eT);}\r\n    }\r\n\r\n    public void chooseDay(){\r\n        // Create an ArrayAdapter using the string array and a default spinner layout\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,\r\n                R.array.days_week, android.R.layout.simple_spinner_item);\r\n\r\n        // Specify the layout to use when the list of choices appears\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        // Apply the adapter to the spinner\r\n        spinner.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    public void addInicio(){\r\n\r\n        butInicio.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //showTimePickerDialog();\r\n                final Calendar getDate = Calendar.getInstance();\r\n                SimpleDateFormat timeformat=new SimpleDateFormat(\"HH:mm a\");\r\n                TimePickerDialog timePickerDialog = new TimePickerDialog(\r\n                        AddEvent.this, new TimePickerDialog.OnTimeSetListener() {\r\n                    @Override\r\n                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                        getDate.set(Calendar.HOUR_OF_DAY, hourOfDay);\r\n                        getDate.set(Calendar.MINUTE, minute);\r\n                        String ini = timeformat.format(getDate.getTime());\r\n                        asignatura.setInicio(ini);\r\n                    }\r\n                }, getDate.get(Calendar.HOUR_OF_DAY), getDate.get(Calendar.MINUTE), false);\r\n\r\n                timePickerDialog.show();\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public void addFin(){\r\n\r\n        butFin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //showTimePickerDialog();\r\n                final Calendar getDate = Calendar.getInstance();\r\n\r\n                TimePickerDialog timePickerDialog = new TimePickerDialog(\r\n                        AddEvent.this, new TimePickerDialog.OnTimeSetListener() {\r\n                    @Override\r\n                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                        getDate.set(Calendar.HOUR_OF_DAY, hourOfDay);\r\n                        getDate.set(Calendar.MINUTE, minute);\r\n                        SimpleDateFormat timeformat=new SimpleDateFormat(\"HH:mm a\");\r\n                        String fin = timeformat.format(getDate.getTime());\r\n                        asignatura.setFin(fin);\r\n                    }\r\n                }, getDate.get(Calendar.HOUR_OF_DAY), getDate.get(Calendar.MINUTE), false);\r\n\r\n                timePickerDialog.show();\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void setSpinner(){\r\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                String d = adapterView.getItemAtPosition(i).toString();\r\n                if(d!=null){asignatura.setDay(d);}\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void showAsignaturas(List<AsignaturaViewModel> artists) {\r\n\r\n        mAdapter.setItems(artists);\r\n    }\r\n\r\n    @Override\r\n    public void showEmptyView() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void showError() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void updateAsignatura(AsignaturaViewModel asignatura, int position) {\r\n        mAdapter.updateItem(asignatura,position);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/AddEvent.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/AddEvent.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/AddEvent.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/AddEvent.java	(date 1639264374788)
@@ -187,9 +187,9 @@
 
 
     @Override
-    public void showAsignaturas(List<AsignaturaViewModel> artists) {
+    public void showAsignaturas(List<AsignaturaViewModel> asignaturas) {
 
-        mAdapter.setItems(artists);
+        mAdapter.setItems(asignaturas);
     }
 
     @Override
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/DeleteEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\n\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport es.udc.psi.agendaly.BaseActivity;\r\nimport es.udc.psi.agendaly.R;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaDatabaseImp;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaPresenter;\r\nimport es.udc.psi.agendaly.TimeTable.presenter.AsignaturaView;\r\nimport es.udc.psi.agendaly.TimeTable.viewmodel.AsignaturaViewModel;\r\n\r\npublic class DeleteEvent extends BaseActivity implements AsignaturaView {\r\n    //Asignatura asignatura = new Asignatura();\r\n    private EventAdapter mAdapter;\r\n    AsignaturaPresenter mPresenter;\r\n\r\n    @BindView(R.id.butDelete)\r\n    Button butDelete;\r\n\r\n    @BindView(R.id.editTextAsignaturaDel)\r\n    EditText editTextAsignatura;\r\n\r\n    AlertDialog.Builder builder;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.borrar_clases);\r\n        setUI();\r\n        mPresenter = new AsignaturaDatabaseImp(this,getBaseContext());\r\n         builder = new AlertDialog.Builder(this);\r\n\r\n    }\r\n\r\n    public void setUI(){\r\n        nameAsignatura();\r\n        borrarAsignatura();\r\n    }\r\n\r\n\r\n\r\n    public void borrarAsignatura(){\r\n        butDelete.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                builder.setMessage(getString(R.string.delete_question))\r\n                        .setPositiveButton(getString(R.string.yes), new DialogInterface.OnClickListener() {\r\n                            public void onClick(DialogInterface dialog, int id) {\r\n                                String a = nameAsignatura();\r\n                                if(a != null) {\r\n                                    mPresenter.deleteClass(a);\r\n                                    Toast.makeText(getBaseContext(), getString(R.string.asignatura_borrada), Toast.LENGTH_SHORT).show();\r\n                                    finish();\r\n                                }\r\n\r\n                            }\r\n                        })\r\n                        .setNegativeButton(getString(R.string.no), new DialogInterface.OnClickListener() {\r\n                            public void onClick(DialogInterface dialog, int id) {\r\n                                // User cancelled the dialog\r\n                            }\r\n                        });\r\n                AlertDialog alertDialog = builder.create();\r\n                alertDialog.show();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void clearAll(){\r\n        editTextAsignatura.setText(\"\");\r\n\r\n    }\r\n\r\n    public String nameAsignatura(){\r\n        String eT = editTextAsignatura.getText().toString();\r\n        if(!eT.isEmpty()) {return eT;}\r\n        else {return \"\";}\r\n    }\r\n\r\n\r\n    @Override\r\n    public void showAsignaturas(List<AsignaturaViewModel> artists) {\r\n\r\n        mAdapter.setItems(artists);\r\n    }\r\n\r\n    @Override\r\n    public void showEmptyView() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void showError() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void updateAsignatura(AsignaturaViewModel asignatura, int position) {\r\n        mAdapter.updateItem(asignatura,position);\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/DeleteEvent.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/DeleteEvent.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/DeleteEvent.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/DeleteEvent.java	(date 1639264374786)
@@ -92,9 +92,9 @@
 
 
     @Override
-    public void showAsignaturas(List<AsignaturaViewModel> artists) {
+    public void showAsignaturas(List<AsignaturaViewModel> asignaturas) {
 
-        mAdapter.setItems(artists);
+        mAdapter.setItems(asignaturas);
     }
 
     @Override
Index: app/src/main/java/es/udc/psi/agendaly/TimeTable/CalendarFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.udc.psi.agendaly.TimeTable;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport devs.mulham.horizontalcalendar.HorizontalCalendar;\r\nimport devs.mulham.horizontalcalendar.model.CalendarEvent;\r\nimport devs.mulham.horizontalcalendar.utils.CalendarEventsPredicate;\r\nimport devs.mulham.horizontalcalendar.utils.HorizontalCalendarListener;\r\nimport es.udc.psi.agendaly.Calendar.CalendarActivity;\r\nimport es.udc.psi.agendaly.R;\r\n\r\n\r\npublic class CalendarFragment extends Fragment  {\r\n\r\n    View rootView;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n         rootView = inflater.inflate(R.layout.fragment_calendar, container, false);\r\n        setHasOptionsMenu(true);\r\n        /* starts before 1 month from now */\r\n        Calendar startDate = Calendar.getInstance();\r\n        startDate.add(Calendar.MONTH, -1);\r\n        /* ends after 1 month from now */\r\n        Calendar endDate = Calendar.getInstance();\r\n        endDate.add(Calendar.MONTH, 1);\r\n        // Default Date set to Today.\r\n        final Calendar defaultSelectedDate = Calendar.getInstance();\r\n        SelectDay(defaultSelectedDate.get(Calendar.DAY_OF_WEEK));\r\n\r\n\r\n        HorizontalCalendar horizontalCalendar = new HorizontalCalendar.Builder(rootView, R.id.calendarView)\r\n                .range(startDate, endDate)\r\n                .datesNumberOnScreen(5)\r\n                .configure()\r\n                .formatTopText(\"MMM\")\r\n                .formatMiddleText(\"dd\")\r\n                .formatBottomText(\"EEE\")\r\n                .showTopText(true)\r\n                .showBottomText(true)\r\n                .textColor(Color.LTGRAY, Color.BLUE)\r\n                .colorTextMiddle(Color.LTGRAY, Color.parseColor(\"#ffd54f\"))\r\n                .end()\r\n                .defaultSelectedDate(defaultSelectedDate)\r\n                .addEvents(new CalendarEventsPredicate() {\r\n                     @Override\r\n                     public List<CalendarEvent> events(Calendar date) {\r\n                         return new ArrayList<>();\r\n                     }\r\n                 })\r\n                .build();\r\n\r\n\r\n\r\n        horizontalCalendar.setCalendarListener(new HorizontalCalendarListener() {\r\n            @Override\r\n            public void onDateSelected(Calendar date, int position) {\r\n                int nD=date.get(Calendar.DAY_OF_WEEK);\r\n                SelectDay(nD);\r\n\r\n            }\r\n\r\n            @Override\r\n            public boolean onDateLongClicked(Calendar date, int position) {\r\n                Intent intent = new Intent(getContext(), CalendarActivity.class);\r\n                startActivity(intent);\r\n                return true;\r\n            }\r\n\r\n        });\r\n\r\n        return rootView;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n        inflater.inflate(R.menu.add_menu,menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        super.onOptionsItemSelected(item);\r\n        int id = item.getItemId();\r\n        if(id==R.id.icon_add){\r\n            Intent intent = new Intent(getActivity(),AddEvent.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if(id==R.id.icon_delete){\r\n            Intent intentdel = new Intent(getActivity(),DeleteEvent.class);\r\n            startActivity(intentdel);\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public void SelectDay(int nD){\r\n        String dia = \"\";\r\n        switch (nD) {\r\n            case 1:\r\n                dia=getString(R.string.sunday);\r\n                break;\r\n\r\n            case 2: dia=getString(R.string.monday);\r\n                break;\r\n            case 3:dia=getString(R.string.tuesday);\r\n                break;\r\n\r\n            case 4:dia=getString(R.string.wednesday);\r\n                break;\r\n\r\n            case 5:dia=getString(R.string.thrusday);\r\n                break;\r\n            case 6: dia=getString(R.string.friday);\r\n                break;\r\n\r\n            case 7: dia=getString(R.string.saturday);\r\n                break;\r\n\r\n        }\r\n        InfoFragment fragment = new InfoFragment(dia);\r\n        assert(getActivity()!=null);\r\n        getActivity().getSupportFragmentManager().beginTransaction()\r\n                .replace(R.id.punto_anclaje_abajo, fragment)\r\n                .addToBackStack(null)\r\n                .commit();\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/TimeTable/CalendarFragment.java b/app/src/main/java/es/udc/psi/agendaly/TimeTable/CalendarFragment.java
--- a/app/src/main/java/es/udc/psi/agendaly/TimeTable/CalendarFragment.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/TimeTable/CalendarFragment.java	(date 1639264374698)
@@ -22,6 +22,7 @@
 import devs.mulham.horizontalcalendar.utils.CalendarEventsPredicate;
 import devs.mulham.horizontalcalendar.utils.HorizontalCalendarListener;
 import es.udc.psi.agendaly.Calendar.CalendarActivity;
+import es.udc.psi.agendaly.Profiles.ProfileActivity;
 import es.udc.psi.agendaly.R;
 
 
@@ -109,6 +110,10 @@
             Intent intentdel = new Intent(getActivity(),DeleteEvent.class);
             startActivity(intentdel);
         }
+        if (id == R.id.icon_sign_out) {
+            Intent profileIntent = new Intent(getActivity(), ProfileActivity.class);
+            startActivity(profileIntent);
+        }
         return true;
     }
 
Index: app/src/main/java/es/udc/psi/agendaly/Auth/AuthenticationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Agendaly, 2021\r\n * Authors:\r\n *  Laura Cabezas González\r\n *  Blanca María Fernández Martín\r\n *  Miguel Blanco Godón\r\n */\r\npackage es.udc.psi.agendaly.Auth;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\n\r\nimport es.udc.psi.agendaly.R;\r\n\r\n\r\npublic class AuthenticationActivity extends AppCompatActivity {\r\n\tprotected static final String AUTH_TYPE_AGENDALY_ACCOUNT = \"agendaly account\";\r\n\tprotected static final String AUTH_TYPE_GOOGLE = \"google\";\r\n\tprivate static final int GOOGLE_OK = 200;\r\n\tprivate EditText email, password;\r\n\tprivate Button signUpAgendaly, signInAgendaly, signGoogle;\r\n\tprivate ProgressDialog loginDialog;\r\n\r\n\t@RequiresApi(api = Build.VERSION_CODES.O)\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tloginDialog = new ProgressDialog(this);\r\n\t\tloginDialog.setMessage(getString(R.string.automatic_signin_dialog));\r\n\t\tloginDialog.setCancelable(false);\r\n\t\tloginDialog.setInverseBackgroundForced(false);\r\n\t\tSharedPreferences sp = getApplicationContext().getSharedPreferences(getString(R.string.shared_preferences_file), Context.MODE_PRIVATE);\r\n\t\tString spEmail = sp.getString(\"user\", null);\r\n\t\tString spPasswd = sp.getString(\"passwd\", null);\r\n\t\tString spMethod = sp.getString(\"authMethod\", null);\r\n\t\tString spTokenId = sp.getString(\"googleCredential\", null);\r\n\t\tif (spEmail!=null && spPasswd!=null && spMethod!=null && spMethod.equals(AUTH_TYPE_AGENDALY_ACCOUNT)) {\r\n\t\t\tloginDialog.show();\r\n\t\t\t// tries automatic sign in using Agendaly account\r\n\t\t\tFirebaseAuth.getInstance().signInWithEmailAndPassword(spEmail, Utils.decode(spPasswd))\r\n\t\t\t\t\t.addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\r\n\t\t\t\t\t\t\tif (!task.isSuccessful()) {\r\n\t\t\t\t\t\t\t\tloginDialog.hide();\r\n\t\t\t\t\t\t\t\tshowAuthError(task.getException().getMessage());\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tIntent intent = new Intent(getApplicationContext(), AuthTestActivity.class);\r\n\t\t\t\t\t\t\t\tintent.putExtra(\"user\", spEmail);\r\n\t\t\t\t\t\t\t\tintent.putExtra(\"password\", Utils.decode(spPasswd));\r\n\t\t\t\t\t\t\t\tintent.putExtra(\"authMethod\", spMethod);\r\n\t\t\t\t\t\t\t\tloginDialog.hide();\r\n\t\t\t\t\t\t\t\tstartActivity(intent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t}\r\n\t\tif (spMethod!=null && spMethod.equals(AUTH_TYPE_GOOGLE)) {\r\n\t\t\t// tries automatic sign in using google account\r\n\t\t\tloginDialog.show();\r\n\t\t\tGoogleSignInOptions gsio = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n\t\t\t\t\t.requestIdToken(\"880869344178-22b2c9rs5kc7omms8gc2g5is6n8c2vhn.apps.googleusercontent.com\").requestEmail().build();\r\n\t\t\tGoogleSignInClient client = GoogleSignIn.getClient(getApplicationContext(), gsio);\r\n\t\t\tstartActivityForResult(client.getSignInIntent(), GOOGLE_OK);\r\n\t\t}\r\n\t\tsetContentView(R.layout.authentication_activity);\r\n\t\tsetTitle(getString(R.string.auth_title));\r\n\t\temail = findViewById(R.id.email_tv);\r\n\t\tpassword = findViewById(R.id.passwd_tv);\r\n\t\tsignUpAgendaly = findViewById(R.id.sign_up_button);\r\n\t\tsignUpAgendaly.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\tString emAddress = email.getText().toString();\r\n\t\t\t\tString passwd = password.getText().toString();\r\n\t\t\t\tif (emAddress.isEmpty()) {\r\n\t\t\t\t\temail.setError(getString(R.string.error_empty_email));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (passwd.isEmpty()) {\r\n\t\t\t\t\tpassword.setError(getString(R.string.error_empty_password));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!Utils.validateEmailAddress(emAddress)) {\r\n\t\t\t\t\temail.setError(getString(R.string.error_invalid_email));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tFirebaseAuth.getInstance()\r\n\t\t\t\t\t\t.createUserWithEmailAndPassword(emAddress, passwd)\r\n\t\t\t\t\t\t.addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\r\n\t\t\t\t\t\t\t\tif (task.isSuccessful()) {\r\n\t\t\t\t\t\t\t\t\tIntent intent = new Intent(getApplicationContext(), AuthTestActivity.class);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"user\", emAddress);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"password\", passwd);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"authMethod\", AUTH_TYPE_AGENDALY_ACCOUNT);\r\n\t\t\t\t\t\t\t\t\tstartActivity(intent);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshowAuthError(task.getException().getMessage());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\tsignInAgendaly = findViewById(R.id.sign_in_button);\r\n\t\tsignInAgendaly.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\tString emAddress = email.getText().toString();\r\n\t\t\t\tString passwd = password.getText().toString();\r\n\t\t\t\tif (emAddress.isEmpty()) {\r\n\t\t\t\t\temail.setError(getString(R.string.error_empty_email));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (passwd.isEmpty()) {\r\n\t\t\t\t\tpassword.setError(getString(R.string.error_empty_password));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!Utils.validateEmailAddress(emAddress)) {\r\n\t\t\t\t\temail.setError(getString(R.string.error_invalid_email));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tFirebaseAuth.getInstance()\r\n\t\t\t\t\t\t.signInWithEmailAndPassword(emAddress, passwd)\r\n\t\t\t\t\t\t.addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\r\n\t\t\t\t\t\t\t\tif (task.isSuccessful()) {\r\n\t\t\t\t\t\t\t\t\tIntent intent = new Intent(getApplicationContext(), AuthTestActivity.class);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"user\", emAddress);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"password\", passwd);\r\n\t\t\t\t\t\t\t\t\tintent.putExtra(\"authMethod\", AUTH_TYPE_AGENDALY_ACCOUNT);\r\n\t\t\t\t\t\t\t\t\tstartActivity(intent);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshowAuthError(task.getException().getMessage());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\tsignGoogle = findViewById(R.id.google_button);\r\n\t\tsignGoogle.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\tGoogleSignInOptions gsio = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n\t\t\t\t\t\t.requestIdToken(\"880869344178-22b2c9rs5kc7omms8gc2g5is6n8c2vhn.apps.googleusercontent.com\").requestEmail().build();\r\n\t\t\t\tGoogleSignInClient client = GoogleSignIn.getClient(getApplicationContext(), gsio);\r\n\t\t\t\tstartActivityForResult(client.getSignInIntent(), GOOGLE_OK);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate void showAuthError(String error) {\r\n\t\tAlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n\t\tbuilder.setTitle(getString(R.string.auth_error_dialog_title));\r\n\t\tbuilder.setMessage(error);\r\n\t\tbuilder.setPositiveButton(getString(R.string.auth_error_dialog_button), null);\r\n\t\tAlertDialog dialog = builder.create();\r\n\t\tdialog.setCancelable(false);\r\n\t\tdialog.show();\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\r\n\t\tif (requestCode == GOOGLE_OK) {\r\n\t\t\tTask<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n\t\t\ttry {\r\n\t\t\t\tGoogleSignInAccount account = task.getResult(ApiException.class);\r\n\t\t\t\t// firebase authentication\r\n\t\t\t\tif (account != null) {\r\n\t\t\t\t\tAuthCredential credential = GoogleAuthProvider.getCredential(account.getIdToken(), null);\r\n\t\t\t\t\tFirebaseAuth.getInstance().signInWithCredential(credential)\r\n\t\t\t\t\t\t\t.addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n\t\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\r\n\t\t\t\t\t\t\t\t\tif (task.isSuccessful()) {\r\n\t\t\t\t\t\t\t\t\t\tIntent intent = new Intent(getApplicationContext(), AuthTestActivity.class);\r\n\t\t\t\t\t\t\t\t\t\tintent.putExtra(\"user\", account.getEmail());\r\n\t\t\t\t\t\t\t\t\t\tintent.putExtra(\"authMethod\", AUTH_TYPE_GOOGLE);\r\n\t\t\t\t\t\t\t\t\t\tloginDialog.hide();\r\n\t\t\t\t\t\t\t\t\t\tstartActivity(intent);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tshowAuthError(task.getException().getMessage());\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowAuthError(task.getException().getMessage());\r\n\t\t\t\t}\r\n\t\t\t} catch (ApiException e) {\r\n\t\t\t\tshowAuthError(e.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/Auth/AuthenticationActivity.java b/app/src/main/java/es/udc/psi/agendaly/Auth/AuthenticationActivity.java
--- a/app/src/main/java/es/udc/psi/agendaly/Auth/AuthenticationActivity.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/Auth/AuthenticationActivity.java	(date 1639264374696)
@@ -10,7 +10,6 @@
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
 import android.view.View;
@@ -36,9 +35,11 @@
 import com.google.firebase.auth.GoogleAuthProvider;
 
 import es.udc.psi.agendaly.R;
+import es.udc.psi.agendaly.TimeTable.Horario;
 
 
 public class AuthenticationActivity extends AppCompatActivity {
+	public static Context context;
 	protected static final String AUTH_TYPE_AGENDALY_ACCOUNT = "agendaly account";
 	protected static final String AUTH_TYPE_GOOGLE = "google";
 	private static final int GOOGLE_OK = 200;
@@ -50,19 +51,19 @@
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
+		context = this.getApplicationContext();
 		loginDialog = new ProgressDialog(this);
 		loginDialog.setMessage(getString(R.string.automatic_signin_dialog));
 		loginDialog.setCancelable(false);
 		loginDialog.setInverseBackgroundForced(false);
-		SharedPreferences sp = getApplicationContext().getSharedPreferences(getString(R.string.shared_preferences_file), Context.MODE_PRIVATE);
-		String spEmail = sp.getString("user", null);
-		String spPasswd = sp.getString("passwd", null);
-		String spMethod = sp.getString("authMethod", null);
-		String spTokenId = sp.getString("googleCredential", null);
+		User user = AuthUtils.retrieveUser();
+		String spEmail = user.getEmail();
+		String spPasswd = user.getPassword();
+		String spMethod = user.getProvider();
 		if (spEmail!=null && spPasswd!=null && spMethod!=null && spMethod.equals(AUTH_TYPE_AGENDALY_ACCOUNT)) {
 			loginDialog.show();
 			// tries automatic sign in using Agendaly account
-			FirebaseAuth.getInstance().signInWithEmailAndPassword(spEmail, Utils.decode(spPasswd))
+			FirebaseAuth.getInstance().signInWithEmailAndPassword(spEmail, spPasswd)
 					.addOnCompleteListener(new OnCompleteListener<AuthResult>() {
 						@Override
 						public void onComplete(@NonNull Task<AuthResult> task) {
@@ -70,9 +71,9 @@
 								loginDialog.hide();
 								showAuthError(task.getException().getMessage());
 							} else {
-								Intent intent = new Intent(getApplicationContext(), AuthTestActivity.class);
+								Intent intent = new Intent(getApplicationContext(), Horario.class);
 								intent.putExtra("user", spEmail);
-								intent.putExtra("password", Utils.decode(spPasswd));
+								intent.putExtra("password", spPasswd);
 								intent.putExtra("authMethod", spMethod);
 								loginDialog.hide();
 								startActivity(intent);
@@ -89,7 +90,6 @@
 			startActivityForResult(client.getSignInIntent(), GOOGLE_OK);
 		}
 		setContentView(R.layout.authentication_activity);
-		setTitle(getString(R.string.auth_title));
 		email = findViewById(R.id.email_tv);
 		password = findViewById(R.id.passwd_tv);
 		signUpAgendaly = findViewById(R.id.sign_up_button);
@@ -106,7 +106,7 @@
 					password.setError(getString(R.string.error_empty_password));
 					return;
 				}
-				if (!Utils.validateEmailAddress(emAddress)) {
+				if (!AuthUtils.validateEmailAddress(emAddress)) {
 					email.setError(getString(R.string.error_invalid_email));
 					return;
 				}
@@ -116,10 +116,8 @@
 							@Override
 							public void onComplete(@NonNull Task<AuthResult> task) {
 								if (task.isSuccessful()) {
-									Intent intent = new Intent(getApplicationContext(), AuthTestActivity.class);
-									intent.putExtra("user", emAddress);
-									intent.putExtra("password", passwd);
-									intent.putExtra("authMethod", AUTH_TYPE_AGENDALY_ACCOUNT);
+									Intent intent = new Intent(getApplicationContext(), Horario.class);
+									AuthUtils.saveUser(new User(emAddress, passwd, AUTH_TYPE_AGENDALY_ACCOUNT));
 									startActivity(intent);
 								} else {
 									showAuthError(task.getException().getMessage());
@@ -142,7 +140,7 @@
 					password.setError(getString(R.string.error_empty_password));
 					return;
 				}
-				if (!Utils.validateEmailAddress(emAddress)) {
+				if (!AuthUtils.validateEmailAddress(emAddress)) {
 					email.setError(getString(R.string.error_invalid_email));
 					return;
 				}
@@ -152,10 +150,8 @@
 							@Override
 							public void onComplete(@NonNull Task<AuthResult> task) {
 								if (task.isSuccessful()) {
-									Intent intent = new Intent(getApplicationContext(), AuthTestActivity.class);
-									intent.putExtra("user", emAddress);
-									intent.putExtra("password", passwd);
-									intent.putExtra("authMethod", AUTH_TYPE_AGENDALY_ACCOUNT);
+									Intent intent = new Intent(getApplicationContext(), Horario.class);
+									AuthUtils.saveUser(new User(emAddress, passwd, AUTH_TYPE_AGENDALY_ACCOUNT));
 									startActivity(intent);
 								} else {
 									showAuthError(task.getException().getMessage());
@@ -198,12 +194,12 @@
 					AuthCredential credential = GoogleAuthProvider.getCredential(account.getIdToken(), null);
 					FirebaseAuth.getInstance().signInWithCredential(credential)
 							.addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+								@RequiresApi(api = Build.VERSION_CODES.O)
 								@Override
 								public void onComplete(@NonNull Task<AuthResult> task) {
 									if (task.isSuccessful()) {
-										Intent intent = new Intent(getApplicationContext(), AuthTestActivity.class);
-										intent.putExtra("user", account.getEmail());
-										intent.putExtra("authMethod", AUTH_TYPE_GOOGLE);
+										Intent intent = new Intent(getApplicationContext(), Horario.class);
+										AuthUtils.saveUser(new User(account.getEmail(), null, AUTH_TYPE_GOOGLE));
 										loginDialog.hide();
 										startActivity(intent);
 									} else {
@@ -219,4 +215,13 @@
 			}
 		}
 	}
+
+	@Override
+	public void onBackPressed() {
+		finishAffinity();
+	}
+
+	public static Context getContext() {
+		return context;
+	}
 }
Index: app/src/main/res/menu/bottom_app_bar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_app_bar.xml b/app/src/main/res/menu/bottom_app_bar.xml
new file mode 100644
--- /dev/null	(date 1639264374756)
+++ b/app/src/main/res/menu/bottom_app_bar.xml	(date 1639264374756)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/calendarAppBar"
+        android:icon="@drawable/baseline_event_white_24"
+        android:title="@string/calendario"/>
+
+    <item android:id="@+id/inicioAppBar"
+        android:icon="@drawable/baseline_home_white_24"
+        android:title="@string/inicio"/>
+
+    <item android:id="@+id/infoAppBar"
+        android:icon="@drawable/baseline_info_white_24"
+        android:title="@string/info"/>
+</menu>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"es.udc.psi.agendaly\"\r\n        minSdk 21\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.4'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.5'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:28.4.2')\r\n    implementation 'com.jakewharton:butterknife:10.2.3'\r\n    implementation 'devs.mulham.horizontalcalendar:horizontalcalendar:1.3.4'\r\n\r\n    // ButterKnife\r\n    implementation 'com.jakewharton:butterknife:10.0.0'\r\n    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'\r\n\r\n    //Room\r\n    def room_version = \"2.3.0\"\r\n\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    annotationProcessor \"androidx.room:room-compiler:$room_version\"\r\n    // optional - RxJava2 support for Room\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n    // optional - RxJava3 support for Room\r\n    implementation \"androidx.room:room-rxjava3:$room_version\"\r\n    // optional - Guava support for Room, including Optional and ListenableFuture\r\n    implementation \"androidx.room:room-guava:$room_version\"\r\n    // optional - Test helpers\r\n    testImplementation \"androidx.room:room-testing:$room_version\"\r\n    // optional - Paging 3 Integration\r\n    implementation \"androidx.room:room-paging:2.4.0-rc01\"\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/build.gradle	(date 1639264374802)
@@ -48,10 +48,18 @@
     implementation 'com.jakewharton:butterknife:10.2.3'
     implementation 'devs.mulham.horizontalcalendar:horizontalcalendar:1.3.4'
 
+    //App Bar
+    implementation 'com.google.android.material:material:1.4.0'
+    implementation 'com.github.bumptech.glide:glide:4.7.1'
+    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
+
     // ButterKnife
-    implementation 'com.jakewharton:butterknife:10.0.0'
+    implementation 'com.jakewharton:butterknife:10.2.3'
     annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
 
+    //refresh
+    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
+
     //Room
     def room_version = "2.3.0"
 
Index: app/src/main/java/es/udc/psi/agendaly/Profiles/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/Profiles/ProfileActivity.java b/app/src/main/java/es/udc/psi/agendaly/Profiles/ProfileActivity.java
new file mode 100644
--- /dev/null	(date 1639264374697)
+++ b/app/src/main/java/es/udc/psi/agendaly/Profiles/ProfileActivity.java	(date 1639264374697)
@@ -0,0 +1,46 @@
+package es.udc.psi.agendaly.Profiles;
+
+import android.content.Intent;
+import android.os.Build;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+
+import androidx.annotation.Nullable;
+import androidx.annotation.RequiresApi;
+import androidx.appcompat.app.AppCompatActivity;
+
+import butterknife.BindView;
+import es.udc.psi.agendaly.Auth.AuthUtils;
+import es.udc.psi.agendaly.Auth.AuthenticationActivity;
+import es.udc.psi.agendaly.Auth.User;
+import es.udc.psi.agendaly.BaseActivity;
+import es.udc.psi.agendaly.R;
+
+public class ProfileActivity extends BaseActivity {
+	@BindView(R.id.profile_sign_out_button)
+	public Button signOutButton;
+
+	@BindView(R.id.user_mail)
+	public TextView tv;
+
+	@RequiresApi(api = Build.VERSION_CODES.O)
+	@Override
+	protected void onCreate(@Nullable Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.profile_activity);
+		User user = AuthUtils.retrieveUser();
+		tv.setText(user.getEmail());
+		signOutButton.setOnClickListener(new View.OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				// do sign out
+				AuthUtils.removeUser();
+				// return to sign in page
+				Intent intent = new Intent(getApplicationContext(), AuthenticationActivity.class);
+				startActivity(intent);
+			}
+		});
+	}
+}
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/feature_launcherM\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/feature_launcher_string\"\r\n        />\r\n    <Button\r\n        android:id=\"@+id/feature_launcherL\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/feature_horario\"\r\n        />\r\n    <Button\r\n        android:id=\"@+id/feature_launcherB\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/feature_launcher_string\"\r\n        />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1639264374754)
@@ -12,7 +12,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/feature_launcher_string"
-        />
+        tools:ignore="DuplicateSpeakableTextCheck" />
     <Button
         android:id="@+id/feature_launcherL"
         android:layout_width="wrap_content"
Index: app/src/main/res/drawable/baseline_event_18.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_event_18.xml b/app/src/main/res/drawable/baseline_event_18.xml
new file mode 100644
--- /dev/null	(date 1639264374748)
+++ b/app/src/main/res/drawable/baseline_event_18.xml	(date 1639264374748)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="18dp"
+    android:height="18dp"
+    android:viewportWidth="18"
+    android:viewportHeight="18"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M13,9L9,9v4h4L13,9zM15,2h-1L14,1h-2v1L6,2L6,1L4,1v1L3,2c-0.55,0 -1,0.45 -1,1v12c0,0.55 0.45,1 1,1h12c0.55,0 1,-0.45 1,-1L16,3c0,-0.55 -0.45,-1 -1,-1zM14,14L4,14L4,6h10v8z"/>
+</vector>
Index: app/src/main/res/drawable/baseline_info_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_info_24.xml b/app/src/main/res/drawable/baseline_info_24.xml
new file mode 100644
--- /dev/null	(date 1639264374751)
+++ b/app/src/main/res/drawable/baseline_info_24.xml	(date 1639264374751)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z"/>
+</vector>
Index: app/src/main/java/es/udc/psi/agendaly/Auth/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/Auth/User.java b/app/src/main/java/es/udc/psi/agendaly/Auth/User.java
new file mode 100644
--- /dev/null	(date 1639264374696)
+++ b/app/src/main/java/es/udc/psi/agendaly/Auth/User.java	(date 1639264374696)
@@ -0,0 +1,37 @@
+package es.udc.psi.agendaly.Auth;
+
+public class User {
+	private String email;
+	private String password;
+	private String provider;
+
+	public User(String email, String password, String provider) {
+		this.email = email;
+		this.password = password;
+		this.provider = provider;
+	}
+
+	public String getEmail() {
+		return this.email;
+	}
+
+	public void setEmail(String email) {
+		this.email = email;
+	}
+
+	public String getPassword() {
+		return this.password;
+	}
+
+	public void setPassword(String password) {
+		this.password = password;
+	}
+
+	public String getProvider() {
+		return this.provider;
+	}
+
+	public void setProvider(String provider) {
+		this.provider = provider;
+	}
+}
Index: app/src/main/java/es/udc/psi/agendaly/Auth/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/udc/psi/agendaly/Auth/Utils.java b/app/src/main/java/es/udc/psi/agendaly/Auth/AuthUtils.java
rename from app/src/main/java/es/udc/psi/agendaly/Auth/Utils.java
rename to app/src/main/java/es/udc/psi/agendaly/Auth/AuthUtils.java
--- a/app/src/main/java/es/udc/psi/agendaly/Auth/Utils.java	(revision fc472b6544035ac6094c34c2d0b0ced4da00741f)
+++ b/app/src/main/java/es/udc/psi/agendaly/Auth/AuthUtils.java	(date 1639264374795)
@@ -7,6 +7,8 @@
  */
 package es.udc.psi.agendaly.Auth;
 
+import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Build;
 
 import androidx.annotation.RequiresApi;
@@ -15,7 +17,11 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-public class Utils {
+import es.udc.psi.agendaly.GlobalApplication;
+import es.udc.psi.agendaly.R;
+
+public class AuthUtils {
+	private static final String SPFPATH = "usr_shared_preferences";
 	private static final String emailPatternRegexp = "(\\w|.+)@(?:\\w|.+)\\.(?:\\w+)";
 	private static final byte[] codingScheme =
 			{
@@ -60,4 +66,29 @@
 		}
 		return new String(sourceBytes);
 	}
+
+	@RequiresApi(api = Build.VERSION_CODES.O)
+	public static void saveUser(User user) {
+		SharedPreferences.Editor sp = AuthenticationActivity.getContext().getSharedPreferences(SPFPATH, Context.MODE_PRIVATE).edit();
+		if (user.getProvider().equals(AuthenticationActivity.AUTH_TYPE_AGENDALY_ACCOUNT)) {
+			sp.putString("user", user.getEmail());
+			sp.putString("passwd", encode(user.getPassword()));
+		}
+		sp.putString("authMethod", user.getProvider());
+		sp.apply();
+	}
+
+	@RequiresApi(api = Build.VERSION_CODES.O)
+	public static User retrieveUser() {
+		SharedPreferences sp = AuthenticationActivity.getContext().getSharedPreferences(SPFPATH, Context.MODE_PRIVATE);
+		String spEmail = sp.getString("user", null);
+		String spPasswd = sp.getString("passwd", null);
+		String spMethod = sp.getString("authMethod", null);
+		return new User(spEmail, spPasswd == null ? null : decode(spPasswd), spMethod);
+	}
+
+	public static void removeUser() {
+		SharedPreferences sp = AuthenticationActivity.getContext().getSharedPreferences(SPFPATH, Context.MODE_PRIVATE);
+		sp.edit().clear().apply();
+	}
 }
